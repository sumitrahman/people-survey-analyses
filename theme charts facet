#need to load ggplot2, scales
#data frame needs variables Breakdown, Category, Year, Theme and Value
#all.themes.database<-themes.database

levels(themes.database$Theme)<-c("Engagement","Inclusion","Leadership",
                                 "L&D","My manager","My team",
                                 "My work","Culture","Purpose",
                                 "Pay and benefits","Resources","Taking action",
                                 "Wellbeing")
themes.database$Theme<-factor(themes.database$Theme,
                              levels=c("Engagement","My work","Taking action","Culture",
                                       "Wellbeing","Purpose","My manager","My team",
                                       "L&D","Inclusion","Resources","Leadership","Pay and benefits"))
themes.database$Category<-factor(themes.database$Category,levels=c("BIS",
                                    "16-34","35-44","45+","undeclared age",
                                    "White British","other ethnicity","undeclared ethnicity",
                                    "carer","not a carer","undeclared carer status",
                                    "childcarer","not a childcarer","undeclared childcarer status",
                                    "disabled","not disabled","undeclared disability status",
                                    "SCS","G6","G7","FS","SEO","HEO","EO","AA/EA/AO","undeclared grade",
                                    "BLG","EM","ES","FC","GOS","KI","LS","MPST","OME","PS","ShEx","UKSA",
                                    "full time","part time","job sharer","undeclared working hours",
                                    "less than 1 year","1-10 years","10+ years","undeclared LOS",
                                    "London","Sheffield","other location","undeclared location",
                                    "member of a professional community","not a member of a professional community","undeclared professional status",
                                    "no religion","Christian","other religion","undeclared religion",
                                    "female","male","undeclared gender",
                                    "heterosexual","not heterosexual","undeclared sexuality"))

#palettes derived from colorbrewer2.org (haven't used RColorBrewer package because I want to force black for BIS)
gender.palette<-c("#000000","#fc8d62","#8da0cb","#999999")
age.palette<-c("#000000","#a6cee3","#1f78b4","#b2df8a","#999999")
group.palette<-c("#000000","#b2182b","#ef8a62","#fddbc7","#d1e5f0","#67a9cf","#2166ac")

#######################################################################################
#Gender scores across themes
win.metafile("line graphs gender.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Sex"&themes.database$Category!="undeclared gender"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+

geom_line()+
#geom_point()+
scale_x_discrete(name="")+
  
#percent is a function from the scales package
#this line will need manually changing for each new theme
scale_y_continuous(labels=percent,name="theme score")+
theme_bw()+theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank(),legend.key=element_blank())+
  
#the next two lines will need manually changing for the palette and line widths
scale_colour_manual(values=gender.palette)+
scale_size_manual(values=c(1,.8,.8))+
guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
ggtitle("Gender scores across themes")+
facet_wrap(~Theme,ncol=4)

dev.off()
#######################################################################################

#######################################################################################
#Ethnicity scores across themes
win.metafile("line graphs ethnicity.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="BME"&themes.database$Category!="undeclared ethnicity"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=gender.palette)+
  scale_size_manual(values=c(1,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Ethnicity scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()

#######################################################################################

#######################################################################################
#Carer scores across themes
win.metafile("line graphs carer.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Carer"&themes.database$Category!="undeclared carer status"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=gender.palette)+
  scale_size_manual(values=c(1,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Carer scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Disability scores across themes
win.metafile("line graphs disability.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Disability"&themes.database$Category!="undeclared disability status"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=gender.palette)+
  scale_size_manual(values=c(1,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Disability scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################



#######################################################################################
#Childcarer scores across themes
win.metafile("line graphs childcarer.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Childcarer"&themes.database$Category!="undeclared childcarer status"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=gender.palette)+
  scale_size_manual(values=c(1,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Childcarer scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Sexuality scores across themes
win.metafile("line graphs sexuality.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Sexuality"&themes.database$Category!="undeclared sexuality"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=gender.palette)+
  scale_size_manual(values=c(1,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Sexuality scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################


#######################################################################################
#Professional scores across themes
win.metafile("line graphs professional.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Professional"&themes.database$Category!="undeclared professional status"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=gender.palette)+
  scale_size_manual(values=c(1,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Professional scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Age scores across themes
win.metafile("line graphs age.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Age"&themes.database$Category!="undeclared age"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=age.palette)+
  scale_size_manual(values=c(1,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Age scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Religion scores across themes
win.metafile("line graphs religion.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Religion"&themes.database$Category!="undeclared religion"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=age.palette)+
  scale_size_manual(values=c(1,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Religion scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Location scores across themes
win.metafile("line graphs location.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Location"&themes.database$Category!="undeclared location"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=age.palette)+
  scale_size_manual(values=c(1,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Location scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Length of BIS service scores across themes
win.metafile("line graphs LOSBIS.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Length of BIS service"&themes.database$Category!="undeclared LOS"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=age.palette)+
  scale_size_manual(values=c(1,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Length of BIS service scores across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Working hours scores across themes
win.metafile("line graphs hours.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Hours"&themes.database$Category!="undeclared working hours"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=age.palette)+
  scale_size_manual(values=c(1,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Hours across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################


#######################################################################################
#Large group scores across themes
win.metafile("line graphs group large.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Group"&(themes.database$Category=="BIS"|themes.database$Category=="BLG"|themes.database$Category=="EM"|themes.database$Category=="ES"|themes.database$Category=="FC"|themes.database$Category=="KI"|themes.database$Category=="PS")&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=group.palette)+
  scale_size_manual(values=c(1,.8,.8,.8,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Larger groups across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Small group scores across themes
win.metafile("line graphs group small.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Group"&(themes.database$Category=="BIS"|themes.database$Category=="GOS"|themes.database$Category=="MPST"|themes.database$Category=="LS"|themes.database$Category=="OME"|themes.database$Category=="ShEx"|themes.database$Category=="UKSA")&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=group.palette)+
  scale_size_manual(values=c(1,.8,.8,.8,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Smaller groups across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################


#######################################################################################
#Smaller grade scores across themes
win.metafile("line graphs grade small.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Grade"&(themes.database$Category=="BIS"|themes.database$Category=="SCS"|themes.database$Category=="FS"|themes.database$Category=="AA/EA/AO")&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=age.palette)+
  scale_size_manual(values=c(1,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Smaller grades across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Larger Grade scores across themes
win.metafile("line graphs grade large.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Grade"&(themes.database$Category=="BIS"|themes.database$Category=="G6"|themes.database$Category=="G7"|themes.database$Category=="SEO"|themes.database$Category=="HEO"|themes.database$Category=="EO")&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=group.palette)+
  scale_size_manual(values=c(1,.8,.8,.8,.8,.8,.8))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Larger grades across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Group scores across themes
group.palette.2<-c("#000000","#800000","#1f78b4","#b2df8a","#33a02c","#8a2be2","#e31a1c","#fdbf6f","#ff7f00","#cab2d6")

win.metafile("line graphs group.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Group"&(themes.database$Category!="GOS"&themes.database$Category!="OME"&themes.database$Category!="UKSA")&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=group.palette.2)+
  scale_size_manual(values=c(1,.7,.7,.7,.7,.7,.4,.4,.7,.4))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Groups across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################

#######################################################################################
#Grade scores across themes
win.metafile("line graphs grade.wmf",width=6,height=6)

ggplot(
  data=themes.database[themes.database$Breakdown=="Grade"&themes.database$Category!="undeclared grade"&themes.database$Theme!="Pay and benefits",],
  aes(x=factor(Year),
      y=Value,
      group=Category,
      colour=Category,
      size=Category))+
  
  geom_line()+
  #geom_point()+
  scale_x_discrete(name="")+
  
  #percent is a function from the scales package
  #this line will need manually changing for each new theme
  scale_y_continuous(labels=percent,name="theme score")+
  theme_bw()+theme(panel.grid.major.x=element_blank(), legend.key=element_blank())+
  
  #the next two lines will need manually changing for the palette and line widths
  scale_colour_manual(values=group.palette.2)+
  scale_size_manual(values=c(1,.5,.5,.5,.5,.5,.5,.5,.5))+
  guides(colour=guide_legend(title=NULL),size=guide_legend(title=NULL))+
  ggtitle("Grades across themes")+
  facet_wrap(~Theme,ncol=4)
dev.off()
#######################################################################################
